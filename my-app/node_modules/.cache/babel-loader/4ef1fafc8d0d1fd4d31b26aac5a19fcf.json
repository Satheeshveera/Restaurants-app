{"ast":null,"code":"var _jsxFileName = \"E:\\\\front end (4)\\\\my-app\\\\src\\\\Ecommerce\\\\Ecomerce.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { alpha, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport logo from \"./image/TESARK_Logo@3x.png\";\nimport Grid from '@material-ui/core/Grid';\nimport Slider from '@material-ui/core/Slider';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch'\n      }\n    }\n  },\n  header: {\n    margin: \"0px\"\n  },\n  header1: {\n    color: \"red\",\n    fontSize: \"20px\"\n  }\n}));\nexport default function SearchAppBar() {\n  _s();\n\n  const classes = useStyles();\n  const [type, setType] = useState(\"\");\n  console.log(\"123\", type);\n  useEffect(() => {\n    category();\n  }); // category get\n\n  const category = () => {\n    axios.get(`http://localhost:8081`).then(res => {\n      console.log(\"res\", res);\n      setType(res.data);\n    }).catch(err => {\n      console.log(\"error\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 1,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 12,\n        lg: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.header,\n          variant: \"h4\",\n          noWrap: true,\n          children: [\"RESTAURANT IN INDIA \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.header1,\n            children: \"/TOTAL RESTAURANT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        sm: 6,\n        md: 6,\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 6,\n          md: 6,\n          lg: 4,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            children: \"Assign responsibility\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: gilad,\n                onChange: handleChange,\n                name: \"gilad\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 22\n              }, this),\n              label: \"Gilad Gray\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: jason,\n                onChange: handleChange,\n                name: \"jason\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 22\n              }, this),\n              label: \"Jason Killian\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: antoine,\n                onChange: handleChange,\n                name: \"antoine\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 22\n              }, this),\n              label: \"Antoine Llorca\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        sm: 6,\n        md: 6,\n        lg: 8,\n        children: \"hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchAppBar, \"Kxua+ZXEti6//axzHeibYsjYAiM=\", false, function () {\n  return [useStyles];\n});\n\n_c = SearchAppBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchAppBar\");","map":{"version":3,"sources":["E:/front end (4)/my-app/src/Ecommerce/Ecomerce.js"],"names":["React","Fragment","useState","useEffect","AppBar","Toolbar","IconButton","Typography","InputBase","alpha","makeStyles","MenuIcon","SearchIcon","logo","Grid","Slider","FormLabel","FormControl","FormGroup","FormControlLabel","FormHelperText","Checkbox","CheckBoxOutlineBlankIcon","CheckBoxIcon","axios","require","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","header","margin","header1","fontSize","SearchAppBar","classes","type","setType","console","log","category","get","then","res","data","catch","err","gilad","handleChange","jason","antoine"],"mappings":"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","sourcesContent":["import React, { Fragment,useState, useEffect } from \"react\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport logo from \"./image/TESARK_Logo@3x.png\"\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nconst axios = require('axios');\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n  header:{\r\n    margin:\"0px\"\r\n  },\r\n  header1:{\r\n    color:\"red\",\r\n    fontSize:\"20px\"\r\n  }\r\n}));\r\n\r\nexport default function SearchAppBar() {\r\n  const classes = useStyles();\r\n\r\n  const [type, setType] = useState(\"\");\r\n  console.log(\"123\",type)\r\n\r\n  useEffect(() => {\r\n    category()\r\n  })\r\n// category get\r\nconst category =()=>{\r\n  axios.get(`http://localhost:8081`)\r\n  .then(res => {\r\n       console.log(\"res\",res)\r\n    setType(res.data)\r\n  })\r\n  .catch(err=> {\r\n    console.log(\"error\")\r\n\r\n  })\r\n\r\n}\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n\r\n      <Grid container spacing={1}>\r\n      <Grid item xs={12} sm={12} md={12} lg={12}>\r\n      <Typography className={classes.header} variant=\"h4\" noWrap>\r\n            RESTAURANT IN INDIA <span className={classes.header1}>/TOTAL RESTAURANT</span>  \r\n          </Typography>\r\n        </Grid>\r\n \r\n        <Grid item xs={6} sm={6} md={6} lg={4}>\r\n        <Grid item xs={6} sm={6} md={6} lg={4}>\r\n          <Typography>category</Typography>\r\n                  {/* {type.length >0 && type.map((item,index) => (\r\n                            <FormControlLabel\r\n                         control={\r\n                        <Checkbox\r\n                       icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n                       checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\r\n                        name={item.id}\r\n                        checked={item.status}\r\n                        onChange={(e) => chkhandleChange(\"Status\",e,index,item)}\r\n                               />\r\n                           }\r\n                           label={item.category_name}\r\n                           />\r\n                           ))} */}\r\n\r\n<FormLabel component=\"legend\">Assign responsibility</FormLabel>\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            control={<Checkbox checked={gilad} onChange={handleChange} name=\"gilad\" />}\r\n            label=\"Gilad Gray\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox checked={jason} onChange={handleChange} name=\"jason\" />}\r\n            label=\"Jason Killian\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox checked={antoine} onChange={handleChange} name=\"antoine\" />}\r\n            label=\"Antoine Llorca\"\r\n          />\r\n        </FormGroup>\r\n        </Grid>\r\n\r\n     \r\n        </Grid>\r\n        <Grid item xs={6} sm={6} md={6} lg={8}>\r\n        hello\r\n        </Grid>\r\n \r\n      </Grid>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}